{"version":3,"sources":["Components/SeasonDisplay.js","App.js","index.js"],"names":["SeasonDisplay","props","lat","month","season","Date","getMonth","text","console","log","icon","className","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","lon","longitude","err","message","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wKAyBeA,EAfO,SAACC,GACrB,IATiBC,EAAKC,EAShBC,GATWF,EASQD,EAAMC,KATTC,GASc,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAMxBK,EAAkB,WAAXH,EAAsB,SAAW,WAC9CI,QAAQC,IAAI,WAAYL,GACxB,IAAMM,EAAkB,WAAXN,EAAsB,YAAc,MAEjD,OACE,6BACE,uBAAGO,UAAS,eAAUD,KACtB,4BAAKH,GACL,uBAAGI,UAAS,eAAUD,OC0BbE,E,4MA1CbC,MAAQ,CAAEX,IAAK,KAAMY,aAAc,I,kEAGd,IAAD,OAClBN,QAAQC,IACN,sLAGFM,OAAOC,UAAUC,YAAYC,oBAC3B,SAACC,GAAD,OACE,EAAKC,SAAS,CACZlB,IAAKiB,EAASE,OAAOC,SACrBC,IAAKJ,EAASE,OAAOG,eAEzB,SAACC,GACC,EAAKL,SAAS,CAAEN,aAAcW,EAAIC,e,2CAOtClB,QAAQC,IAAI,0B,+BAIZ,OAAIkB,KAAKd,MAAMC,eAAiBa,KAAKd,MAAMX,IAClC,uCAAayB,KAAKd,MAAMC,eAG5Ba,KAAKd,MAAMC,cAAgBa,KAAKd,MAAMX,IAEvC,6BACE,kBAAC,EAAD,CAAeA,IAAKyB,KAAKd,MAAMX,OAK9B,+C,GAvCO0B,IAAMC,WCCxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.7d93d4ca.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst getSeason = (lat, month) => {\r\n  if (month > 2 && month < 9) {\r\n    return lat > 0 ? \"summer\" : \"winter\";\r\n  } else {\r\n    return lat > 0 ? \"winter\" : \"summer\";\r\n  }\r\n};\r\n\r\nconst SeasonDisplay = (props) => {\r\n  const season = getSeason(props.lat, new Date().getMonth());\r\n  const text = season === \"winter\" ? \"Chilly\" : \"Sizzling\";\r\n  console.log(\"Season: \", season);\r\n  const icon = season === \"winter\" ? \"snowflake\" : \"sun\";\r\n\r\n  return (\r\n    <div>\r\n      <i className={`icon ${icon}`} />\r\n      <h1>{text}</h1>\r\n      <i className={`icon ${icon}`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React from \"react\";\nimport SeasonDisplay from \"./Components/SeasonDisplay\";\n\nclass App extends React.Component {\n  state = { lat: null, errorMessage: \"\" };\n\n  // this only gets invoked once\n  componentDidMount() {\n    console.log(\n      \"Data loading i.e. making network request to api, getting geolocation.  It is recommended to do data loading in 'componentDidMount' method.  That way, data loading is centralized.\"\n    );\n\n    window.navigator.geolocation.getCurrentPosition(\n      (position) =>\n        this.setState({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n        }),\n      (err) => {\n        this.setState({ errorMessage: err.message });\n      }\n    );\n  }\n\n  // called every time a component is updated.  i.e. if the state changes or component receives new props from parent.\n  componentDidUpdate() {\n    console.log(\"Component Did Update\");\n  }\n\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div>Error: {this.state.errorMessage}</div>;\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return (\n        <div>\n          <SeasonDisplay lat={this.state.lat} />\n        </div>\n      );\n    }\n\n    return <div>Loading...</div>;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}